(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{371:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("code",[t._v("看文章之前，强烈建议先把项目拉取下来！案例来自小弟的开源项目")]),a("a",{attrs:{href:"https://github.com/KiteWorld/KiteBlog",target:"_blank",rel:"noopener noreferrer"}},[t._v("「项目Github」"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("文章内容只是个人学习的一些总结经验，不具有权威性")])]),t._v(" "),a("h2",{attrs:{id:"什么是-token-验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-token-验证"}},[t._v("#")]),t._v(" 什么是 Token 验证")]),t._v(" "),a("p",[t._v("常见的 Token 验证方式种:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("OAuth2")]),t._v("，例如：微信授权登录  (貌似也属于 Token 验证)")]),t._v(" "),a("li",[a("code",[t._v("基于 JWT 的 Token 验证")]),t._v(","),a("code",[t._v("KiteBlog")]),t._v(" 里面使用的就是这种。")])]),t._v(" "),a("p",[t._v("推荐阅读：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://learnku.com/articles/17883?order_by=vote_count&",target:"_blank",rel:"noopener noreferrer"}},[t._v("JWT 超详细分析"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/fengzheng/p/8416393.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("说一说几种常用的登录认证方式，你用的哪种"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"什么是-jwt-json-web-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-jwt-json-web-token"}},[t._v("#")]),t._v(" 什么是 JWT (JSON WEB TOKEN) ？")]),t._v(" "),a("p",[t._v("推荐阅读：")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON Web Token 入门教程"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.leapoahead.com/2015/09/06/understanding-jwt/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON Web Token - 在Web应用间安全地传递信息"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"nodejs-express-中实现-token-的生成和验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-express-中实现-token-的生成和验证"}},[t._v("#")]),t._v(" NodeJS (Express) 中实现 Token 的生成和验证")]),t._v(" "),a("h3",{attrs:{id:"安装-jsonwebtoken-和-express-jwt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-jsonwebtoken-和-express-jwt"}},[t._v("#")]),t._v(" 安装 jsonwebtoken 和 express-jwt")]),t._v(" "),a("p",[t._v("首先我们先安装 "),a("code",[t._v("jsonwebtoken")]),t._v("和 "),a("code",[t._v("express-jwt")]),t._v(" 这两个中间件")]),t._v(" "),a("p",[a("code",[t._v("jsonwebtoken")]),t._v(": 用于生成 Token 。它也有解析 Token 的功能")]),t._v(" "),a("p",[a("code",[t._v("express-jwt")]),t._v(": 用于解析 Token（比 "),a("code",[t._v("jsonwebtoken")]),t._v(" 解决方便） , 它把解析之后的数据，存放到 "),a("code",[t._v("requset.user")]),t._v(" 中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 安装 jsonwebtoken\nnpm i jsonwebtoken\n\n# 安装 express-jwt\nnpm i express-jwt\n\n")])])]),a("h3",{attrs:{id:"生成-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成-token"}},[t._v("#")]),t._v(" 生成 token")]),t._v(" "),a("p",[t._v("如果你看了上面 JWT 介绍的文章，就知道 JWT 是由三部分组成的，分别是"),a("code",[t._v("载荷(Payload)")]),t._v("、"),a("code",[t._v("头部(Header)")]),t._v("、"),a("code",[t._v("签名(Signature)")]),t._v(" 。")]),t._v(" "),a("p",[a("code",[t._v("jsonwebtoken")]),t._v(" 给我们提供了"),a("code",[t._v("sign(payload, secretOrPrivateKey, [options, callback])")]),t._v("方法。sign 方法对应的其实就是 JWT "),a("code",[t._v("签名(Signature)")]),t._v("的动作")]),t._v(" "),a("p",[t._v("payload：荷载 ，参数类型：对象\nsecretOrPrivateKey：自定义的密钥，密钥属于敏感信息。参数类型：字符串\noptions：可以配置 header 、荷载、指定算法类型。参数类型：对象\ncallback：回调")]),t._v(" "),a("p",[t._v("眼尖的朋友应该发现，"),a("code",[t._v("payload")]),t._v(" 和 "),a("code",[t._v("options")]),t._v(" 两个"),a("code",[t._v("参数")]),t._v("都可以配置荷，下面有例子。根据自己的习惯选择就好")]),t._v(" "),a("p",[t._v("Payload 部分 JWT 规定了7个官方字段,这些字段都是可选字段。可直接以对象的形式传给 "),a("code",[t._v("payload")]),t._v(" 参数。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("iss (issuer)：签发人\nexp (expiration time)：过期时间\nsub (subject)：主题\naud (audience)：受众\nnbf (Not Before)：生效时间\niat (Issued At)：签发时间\njti (JWT ID)：编号\n")])])]),a("p",[a("code",[t._v("options")]),t._v(" 中也可以接受以上七个字段，不过字段名称有所区别。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("iss ---- issuer\nexp ---- expiresIn\nsub ---- subject\naud ---- audience\nnbf ---- notBefore\niat ---- noTimestamp\njti ---- jwtid\n")])])]),a("p",[t._v("除此之后 "),a("code",[t._v("options")]),t._v(" 提供了"),a("code",[t._v("algorithm")]),t._v("和"),a("code",[t._v("header")]),t._v("，分别对应使用的加密算法和 JWT 的 Header 部分，其实 "),a("code",[t._v("algorithm")]),t._v(" 应该也是属于 Header 部分的。")]),t._v(" "),a("p",[t._v("说了这么多，其实我们一般常用的只有 "),a("code",[t._v("exp(expiresIn)")]),t._v(" 和 "),a("code",[t._v("algorithm")]),t._v(" 这两个字段，")]),t._v(" "),a("p",[t._v("例子一：")]),t._v(" "),a("p",[t._v("token 的有效时间是配置在 "),a("code",[t._v("option")]),t._v("里")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先引入 jsonwebtoken")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsonWebToken "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jsonwebtoken'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//密钥，当然实际的项目中密钥应该变态一些")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kite1874'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonWebToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Payload 部分，官方提供七个字段这边省略，可以携带一些可以识别用户的信息。例如 userId。")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 千万不要是用敏感信息，例如密码，Payload 是可以解析出来的。")]),t._v("\n\tuserId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userId\n\trole"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("role\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\texpiresIn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"24h"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//token有效期")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expiresIn: 60 * 60 * 24 * 7,  两种写法")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// algorithm:"HS256"  默认使用 "HS256" 算法')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("例子二：")]),t._v(" "),a("p",[t._v("我们也可以在 "),a("code",[t._v("payload")]),t._v(" 里配置有效时间")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonWebToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//exp 的值是一个时间戳，这里表示 1h 后 token 失效")]),t._v("\n\texp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tuserId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userId\n\trole"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("role\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("jsonwebtoken")]),t._v(" 除了生成 token 外，还提供了解析验证 token 的方法，"),a("code",[t._v("jwt.verify(token, secretOrPublicKey, [options, callback])")]),t._v("。")]),t._v(" "),a("p",[t._v("这里就不演示了， 感兴趣的朋友可以参考文档："),a("a",{attrs:{href:"https://github.com/auth0/node-jsonwebtoken#token-expiration-exp-claim",target:"_blank",rel:"noopener noreferrer"}},[t._v("「JsonWebToken」"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"验证-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证-token"}},[t._v("#")]),t._v(" 验证 token")]),t._v(" "),a("p",[a("code",[t._v("express-jwt")]),t._v(" 是针对 "),a("code",[t._v("express")]),t._v("框架开发的 "),a("code",[t._v("JWT Token")]),t._v(" 验证中间件。我先来简单说以下它的用法。")]),t._v(" "),a("p",[t._v("主要有两种方式，一种是哪些请求需要验证就往哪里加验证；另外一种是先给全部请求加上验证，再给不需要验证的请求配置"),a("code",[t._v("白名单")]),t._v("。")]),t._v(" "),a("p",[t._v("方式一：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" express "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jwt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express-jwt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//SECRET_KEY 要与生成 Token 时保持一致 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kite1874'")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// secret 为密钥，algorithms 为算法。需要注意的是，如果你生成 Token 的时候没有手动设置 algorithm ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认是使用 HS256 来加密的。「express-jwt 6.0」版本需要加 algorithms: ['HS256'] , 说起来都是泪！")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jwt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" algorithms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HS256'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do something...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("看完上面的例子，很显然不符合我们的逾期，一个正常的项目有个几十个 api 是分分钟的事。我们不可能一个个给他加上检验")]),t._v(" "),a("p",[t._v("方式二：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注册中间件，相当于配置一个全局 token 验证，unless 就是上面说的白名单")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把不需要 token 验证的请求填进 path 里即可, 支持数组、字符串、正则")]),t._v("\n\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jwt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECRET_KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" algorithms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HS256'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unless")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/auth/adminLogin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\/public\\/.*")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /auth/adminLogin api 和 public 下的文件都不需要 token 验证")]),t._v("\n")])])]),a("p",[t._v("这种方式是不是方便很多，而且更美观，维护起来也更方便")]),t._v(" "),a("p",[a("strong",[t._v("Token 解析出来的用户信息，默认存放在 "),a("code",[t._v("req.user")]),t._v(", 可以直接 "),a("code",[t._v("req.user.userId")]),t._v("来使用生成 Token 时填进去的用户id")])]),t._v(" "),a("p",[t._v("你也通过 "),a("code",[t._v("requestProperty")]),t._v(" 和 "),a("code",[t._v("resultProperty")]),t._v(" 来设置用户信息存放的对象。")]),t._v(" "),a("p",[t._v("这里就不展开，详细文档参考："),a("a",{attrs:{href:"https://github.com/auth0/express-jwt#readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("express-jwt"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"验证错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证错误处理"}},[t._v("#")]),t._v(" 验证错误处理")]),t._v(" "),a("p",[t._v("可以使用 "),a("code",[t._v("app.use()")]),t._v(" 来注册处理验证不通过的情况")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("app.use(function (err, req, res, next) {\n  if (err.name === 'UnauthorizedError') {\n    res.status(401).send(\"干嘛呢？你想硬闯？！\")\n  }\n})\n")])])]),a("h3",{attrs:{id:"注意-个人理解-不具有权威性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-个人理解-不具有权威性"}},[t._v("#")]),t._v(" 注意（个人理解，不具有权威性）")]),t._v(" "),a("p",[t._v("到这里 Token 的生成、验证、检验不通过错误处理就完成了。 Token 生成一般是在登录之后生成，并返回给前端，前端拿到 Token ,并在每次请求 api 的时候携带上 Token , Token 就相当于这个用户的身份，不要轻易泄露。")]),t._v(" "),a("p",[t._v("Token一旦签发，不能主动让它失效，只能等待它有效期过才能失效。也就是说就算你修改了密码，之前的 Token 也还是有效的。你可以修改后端生成 Token 时使用的密钥，不让之前的 Token 检验通过，但是这就表示之前所有生成 Token 都失效了，做不到针对某个用户进行注销。这显然也不合适的。 所以用户修改密码时，前端一般都要清除之前保存的 Token")]),t._v(" "),a("p",[t._v("有朋友应该会想到在后端把 Token 储存起来，每一个用户对应一个 token。修改账号时，再生成一个新的 Token 覆盖之前的 Token，但这就违背了使用 Token 的目的，Token 的使用很大程度就为了减少服务器的压力。把尽可能多的信息存储在客户端而不是服务端。")]),t._v(" "),a("p",[t._v("使用 Token 可以防御 CSRF 攻击，之前写过一篇关于网络安全的文章，感兴趣的朋友可以看一下"),a("a",{attrs:{href:"https://juejin.cn/post/6892961914079412237#comment",target:"_blank",rel:"noopener noreferrer"}},[t._v("「XSS 攻击、CSRF 攻击、SQL 注入、流量劫持（DNS 劫持、HTTP 劫持）—— 浏览器安全」"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);